<?xml version="1.0"?>
<project name="pulse" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <!-- various directories used when building things -->
  <property name="src.dir"     location="src/main/java"/>
  <property name="rsrc.dir"     location="src/main/resources"/>
  <property name="deploy.dir"  location="dist"/>
  <property name="classes.dir" location="${deploy.dir}/classes"/>

  <property name="maven-ant.vers" value="2.1.1"/>
  <property name="maven-ant.dir" value="${user.home}/.m2/ant-support"/>
  <property name="maven-ant.jar" value="${maven-ant.dir}/maven-ant-tasks-${maven-ant.vers}.jar"/>
  <property name="maven-ant.url"
            value="http://mirrors.ibiblio.org/pub/mirrors/apache/maven/binaries"/>
  <condition property="maven-ant.exists"><available file="${maven-ant.jar}"/></condition>
  <target name="-download-maven-ant" unless="maven-ant.exists">
    <mkdir dir="${maven-ant.dir}"/>
    <get src="${maven-ant.url}/maven-ant-tasks-${maven-ant.vers}.jar"
         dest="${maven-ant.jar}" usetimestamp="true"/>
  </target>

  <target name="-init-maven-ant" depends="-download-maven-ant">
    <taskdef resource="org/apache/maven/artifact/ant/antlib.xml"
             uri="urn:maven-artifact-ant" classpath="${maven-ant.jar}"/>
    <artifact:pom id="pom" file="pom.xml"/>
    <artifact:dependencies pathId="classpath" pomRefId="pom"/>
  </target>

  <!-- prepares the application directories -->
  <target name="prepare" depends="-init-maven-ant">
    <mkdir dir="${classes.dir}"/>
    <copy todir="${classes.dir}">
      <fileset dir="${rsrc.dir}" includes="**"/>
    </copy>
  </target>

  <!-- generates fields for persistent record classes -->
  <target name="genrecord" depends="prepare">
    <taskdef name="grecord" classname="com.samskivert.depot.tools.GenRecordTask"
             classpathref="classpath"/>
    <!-- make sure the record class files are all compiled -->
    <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes" debug="on" deprecation="on">
      <classpath refid="classpath"/>
      <include name="**/*Record.java"/>
    </javac>

    <path id="built.classpath">
      <path refid="classpath"/>
      <pathelement location="${classes.dir}"/>
    </path>

    <!-- now update the source files -->
    <grecord classpathref="built.classpath">
      <fileset dir="${src.dir}" includes="**/*Record.java"/>
    </grecord>
  </target>

  <!-- cleans out the intermediate build files -->
  <target name="clean" description="Cleans out build results.">
    <delete dir="${classes.dir}"/>
    <delete failonerror="false"><fileset dir="${deploy.dir}" includes="*.jar"/></delete>
  </target>

  <!-- wipes the entire build directory clean -->
  <target name="distclean" description="Completely removes build result directory.">
    <delete dir="${deploy.dir}"/>
  </target>

  <!-- build the java class files -->
  <target name="compile" depends="prepare" description="Compiles the code.">
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}" source="1.5" target="1.5" encoding="utf-8">
      <classpath refid="classpath"/>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <!-- builds our distribution jar file -->
  <target name="dist" depends="prepare,compile" description="Compiles code, builds jar file.">
    <jar destfile="${deploy.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
      <exclude name="**/tests/**"/>
    </jar>
  </target>

  <target name="maven-deploy" depends="dist"
          description="Deploys build artifacts to a Maven repository.">
    <fail unless="maven.deploy.repo">
      Must specify Maven repository with -Dmaven.deploy.repo=file://somepath
    </fail>
    <artifact:deploy file="${deploy.dir}/${ant.project.name}.jar" uniqueVersion="false">
      <remoteRepository url="${maven.deploy.repo}"/>
      <pom refid="pom"/>
    </artifact:deploy>
  </target>
</project>
